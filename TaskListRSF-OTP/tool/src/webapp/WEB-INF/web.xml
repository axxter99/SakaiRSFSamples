<?xml version="1.0"?>
<web-app xmlns="http://java.sun.com/xml/ns/j2ee"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee 
	  http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd"
  version="2.4">
	<display-name>sakai-tasklist-otp</display-name>
	<description>Sakai Task List</description>

 <!-- Configure standard Spring application contexts. Be sure to mention
    rsf config files first, so any overrides may be processed. The first two
    config files are loaded from inside the rsfutil.jar  -->
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>
      classpath:conf/rsf-config.xml,
      classpath:conf/blank-applicationContext.xml,
      classpath:conf/hibernate-applicationContext.xml,
      classpath:conf/sakai-applicationContext.xml,
      /WEB-INF/applicationContext.xml
    </param-value>
  </context-param>
  <!-- Configure "request scope" Spring application contexts (RSAC).
    Be sure to mention rsf config files first, so any overrides may be
    processed. -->
  <context-param>
    <param-name>requestContextConfigLocation</param-name>
    <param-value>
      classpath:conf/rsf-requestscope-config.xml,
      classpath:conf/blank-requestContext.xml,
      classpath:conf/hibernate-requestContext.xml,
      classpath:conf/sakai-requestContext.xml,
      /WEB-INF/requestContext.xml
    </param-value>
  </context-param>
	
  <!--
    The Sakai Request Handler - standard stanza. Do NOT apply the sakai 
    request filter to anything that falls outside the "mapped path", in this
    instance, /faces/*. Anything that falls outside this path (interpreted
    as a resource URL) will be handled directly by the container (Tomcat).
  -->
  <filter>
    <filter-name>sakai.request</filter-name>
    <filter-class>org.sakaiproject.util.RequestFilter</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>sakai.request</filter-name>
    <servlet-name>sakai.rsf.otp.tasklist</servlet-name>
    <dispatcher>REQUEST</dispatcher>
    <dispatcher>FORWARD</dispatcher>
    <dispatcher>INCLUDE</dispatcher>
  </filter-mapping>

  <servlet>
    <!-- This servlet name must agree exactly with the tool name registered in 
    the XML tool registration file held at path tools/ -->
    <servlet-name>sakai.rsf.otp.tasklist</servlet-name>
    <servlet-class>
      uk.ac.cam.caret.sakai.rsf.servlet.ReasonableSakaiServlet
    </servlet-class>
    <!--<load-on-startup>1</load-on-startup>-->
  </servlet>
  <!-- This is the mapping we would LIKE to apply, if it were supported by Sakai.
    Instead it is mocked up by SakaiRequestParser -->
  <servlet-mapping>
    <servlet-name>sakai.rsf.otp.tasklist</servlet-name>
    <url-pattern>/faces/*</url-pattern>
  </servlet-mapping>
	<listener>
		<listener-class>
			org.sakaiproject.util.ToolListener
		</listener-class>
	</listener>
	<listener>
		<listener-class>
			org.sakaiproject.util.ContextLoaderListener
		</listener-class>
	</listener>
</web-app>
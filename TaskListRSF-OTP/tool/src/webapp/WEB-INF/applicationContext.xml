<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">
<!-- documented by aaronz@vt.edu -->
<!-- RSF version by antranig@caret.cam.ac.uk - 
  some contents moved from "spring-beans.xml" -->
<beans>

  <!--  Spring messageSource replaces JSF message-bundle from faces-config.xml -->
 <bean id="messageSource"
    class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
    <property name="basename" value="classpath:org/sakaiproject/tool/tasklist/bundle/Messages"/>
    <property name="cacheSeconds" value="10" />
  </bean>

  <!-- Use the Sakai session factory, pre-configured, instead of one local to TaskList,
    Give this your HBM files so the Sakai session factory can use them,
    this creates a tool specific bean to access our data through the Sakai session factory,
    ONLY needed for the hibernate implementation of the manager -->
  <bean id="sessionFactory"
    parent="org.sakaiproject.springframework.orm.hibernate.SessionFactoryBase">
    <property name="mappingResources">
      <list>
        <value>
          org/sakaiproject/tool/tasklist/hibernate/Task.hbm.xml
        </value>
      </list>
    </property>
  </bean>


  <!-- create a transactionManager bean from the sakai tool sessionFactory,
    ONLY needed for the hibernate implementation of the manager -->
  <bean id="org.sakaiproject.tool.tasklist.HibernateTransactionManager"
    class="org.springframework.orm.hibernate3.HibernateTransactionManager">
    <property name="sessionFactory">
      <ref bean="sessionFactory" />
    </property>
  </bean>

  <!-- create a transaction interceptor which sits between the dao and the
    transaction manager that we created in the previous block, this
    helps us with transaction control,
    ONLY needed for the hibernate implementation of the manager -->
  <!--  NB THIS TPFB apparently not used in example! -->
  <bean id="org.sakaiproject.tool.tasklist.TransactionProxyFactoryBean"
    class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean"
    lazy-init="true">
    <property name="transactionManager">
      <ref
        bean="org.sakaiproject.tool.tasklist.HibernateTransactionManager" />
    </property>
    <property name="target">
      <ref bean="org.sakaiproject.tool.tasklist.api.TaskListManagerDao" />
    </property>
    <property name="transactionAttributes">
      <props>
        <prop key="*">PROPAGATION_REQUIRED</prop>
      </props>
    </property>
  </bean>

<!-- Use RSF's "BeanGuard" validation scheme to trap all write accesses to a
     Task entity -->

  <bean parent="writeGuardParent">
    <property name="guardedPath" value="Task.*"/>
    <property name="guardProperty" value="taskTransit.task"/>
  </bean>

  <bean parent="requestAddressibleParent">
    <property name="value" value="deleteIds, taskTransit" />
  </bean>

</beans>